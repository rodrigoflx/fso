{"ast":null,"code":"var _jsxFileName = \"/home/rodff/Projects/fso/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nconst StatisticLines = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 46\n    }, this), \" \"]\n  }, void 0, true);\n};\n_c2 = StatisticLines;\nconst StatisticLinesPercentage = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 56\n    }, this), \" \"]\n  }, void 0, true);\n};\n_c3 = StatisticLinesPercentage;\nconst Statistics = _ref4 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref4;\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Statistics \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLines, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLines, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLines, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLines, {\n        text: \"all\",\n        value: good + neutral + bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLines, {\n        text: \"average\",\n        value: (good - bad) / (good + neutral + bad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLinesPercentage, {\n        text: \"positive\",\n        value: good / (good + neutral + bad) * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n};\n_c4 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const increaseGood = () => setGood(good + 1);\n  const increaseNeutral = () => setNeutral(neutral + 1);\n  const increaseBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give Feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLines\");\n$RefreshReg$(_c3, \"StatisticLinesPercentage\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_ref","handleClick","text","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLines","_ref2","value","_c2","StatisticLinesPercentage","_ref3","_c3","Statistics","_ref4","good","neutral","bad","_c4","App","_s","setGood","setNeutral","setBad","increaseGood","increaseNeutral","increaseBad","_c5","$RefreshReg$"],"sources":["/home/rodff/Projects/fso/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleClick, text}) => \n  <>\n    <button onClick={handleClick}>\n    {text}\n    </button>\n  </>\n\nconst StatisticLines = ({text, value}) => <> <p>{text} {value}</p> </>\nconst StatisticLinesPercentage = ({text, value}) => <> <p>{text} {value}%</p> </>\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return (\n      <>\n      <p> No feedback given</p>\n      </>\n    )\n  } else { \n    return (\n      <>\n      <h1> Statistics </h1>\n          <StatisticLines text='good' value={good} />\n          <StatisticLines text='neutral' value={neutral} />\n          <StatisticLines text='bad' value={bad} />\n          <StatisticLines text='all' value={good+neutral+bad} />\n          <StatisticLines text='average' value={(good- bad)/(good+neutral+bad)} />\n          <StatisticLinesPercentage text='positive' value={((good)/(good+neutral+bad)) * 100} />\n      </> \n    )\n  }\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const increaseGood =  () => setGood(good+1)\n  const increaseNeutral = () => setNeutral(neutral+1)\n  const increaseBad = () => setBad(bad+1)\n\n  return (\n    <div>\n      <h1> give Feedback </h1>\n      <Button handleClick={increaseGood} text='good'/>\n      <Button handleClick={increaseNeutral} text='neutral'/>\n      <Button handleClick={increaseBad} text='bad'/>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}