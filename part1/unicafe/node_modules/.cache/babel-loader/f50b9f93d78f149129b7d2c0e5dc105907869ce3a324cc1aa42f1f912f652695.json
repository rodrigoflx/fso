{"ast":null,"code":"var _jsxFileName = \"/home/rodff/Projects/fso/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = (handleClick, text) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const increaseGood = () => () => setGood(good + 1);\n  const increaseNeutral = () => () => setNeutral(neutral + 1);\n  const increaseBad = () => () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give Feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \"good \", good, \"neutral \", neutral, \"bad \", bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","handleClick","text","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","increaseGood","increaseNeutral","increaseBad","_c2","$RefreshReg$"],"sources":["/home/rodff/Projects/fso/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = (handleClick, text) => \n  <>\n    <button onClick={handleClick}>\n    text\n    </button>\n  </>\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const increaseGood = () => () => setGood(good+1)\n  const increaseNeutral = () => () => setNeutral(neutral+1)\n  const increaseBad = () => () => setBad(bad+1)\n\n  return (\n    <div>\n      <h1> give Feedback </h1>\n      <Button handleClick={increaseGood} text='good'/>\n      <Button handleClick={increaseNeutral} text='neutral'/>\n      <Button handleClick={increaseBad} text='bad'/>\n      <h1> Statistics </h1>\n      good {good}\n      neutral {neutral}\n      bad {bad}\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,MAAM,GAAGA,CAACC,WAAW,EAAEC,IAAI,kBAC/BL,OAAA,CAAAE,SAAA;EAAAI,QAAA,eACEN,OAAA;IAAQO,OAAO,EAAEH,WAAY;IAAAE,QAAA,EAAC;EAE9B;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ;AAAC,gBACT,CAAC;AAAAC,EAAA,GALCT,MAAM;AAOZ,MAAMU,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMuB,YAAY,GAAGA,CAAA,KAAM,MAAML,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;EAChD,MAAMO,eAAe,GAAGA,CAAA,KAAM,MAAMJ,UAAU,CAACD,OAAO,GAAC,CAAC,CAAC;EACzD,MAAMM,WAAW,GAAGA,CAAA,KAAM,MAAMH,MAAM,CAACD,GAAG,GAAC,CAAC,CAAC;EAE7C,oBACEnB,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBX,OAAA,CAACG,MAAM;MAACC,WAAW,EAAEiB,YAAa;MAAChB,IAAI,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChDX,OAAA,CAACG,MAAM;MAACC,WAAW,EAAEkB,eAAgB;MAACjB,IAAI,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtDX,OAAA,CAACG,MAAM;MAACC,WAAW,EAAEmB,WAAY;MAAClB,IAAI,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9CX,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,SAChB,EAACI,IAAI,EAAC,UACH,EAACE,OAAO,EAAC,MACb,EAACE,GAAG;EAAA;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAG,EAAA,CAtBKD,GAAG;AAAAW,GAAA,GAAHX,GAAG;AAwBT,eAAeA,GAAG;AAAA,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}